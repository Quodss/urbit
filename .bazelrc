# See: https://docs.bazel.build/versions/master/user-manual.html#bazelrc.

# https://docs.bazel.build/versions/master/skylark/performance.html#memory-profiling
startup --host_jvm_args=-Xmx2g

# Ignore debug traces, such as when the bazel version differs from what rules expect.
common --ui_event_filters=-DEBUG

# build --incompatible_disallow_empty_glob
build --verbose_failures

# build --compilation_mode=opt


# build --incompatible_disallow_empty_glob
build --verbose_failures

# Allow newly registered toolchains to be resolved (ie. zig cc)
# build --incompatible_enable_cc_toolchain_resolution

# # Prevent bazel from detecting the default non-hermetic toolchain.
# build --action_env BAZEL_DO_NOT_DETECT_CPP_TOOLCHAIN=1

build:linux-x86_64 --incompatible_enable_cc_toolchain_resolution
build:linux-x86_64 --platforms @zig_sdk//platform:linux_x86_64
build:linux-x86_64 --extra_toolchains @zig_sdk//toolchain:x86_64-linux-musl

build:linux-aarch64 --incompatible_enable_cc_toolchain_resolution
build:linux-aarch64 --platforms @zig_sdk//platform:linux_aarch64
build:linux-aarch64 --extra_toolchains @zig_sdk//toolchain:aarch64-linux-musl

build:macos-x86_64 --incompatible_enable_cc_toolchain_resolution
build:macos-x86_64 --platforms @zig_sdk//platform:macos_x86_64
build:macos-x86_64 --extra_toolchains @zig_sdk//toolchain:x86_64-macos-gnu

build:macos-aarch64 --incompatible_enable_cc_toolchain_resolution
build:macos-aarch64 --platforms @zig_sdk//platform:macos_aarch64
build:macos-aarch64 --extra_toolchains @zig_sdk//toolchain:aarch64-macos-gnu

# # Allow newly registered toolchains to be resolved (ie. zig cc)
# build:zig-cc --incompatible_enable_cc_toolchain_resolution
# build:zig-cc --extra_toolchains @zig_sdk//toolchain:linux_arm64_gnu.2.28
# build:zig-cc --extra_toolchains @zig_sdk//toolchain:x86_64-linux-gnu.2.28
# build:zig-cc --features=-per_object_debug_info
# build:zig-cc --define force_libcpp=enabled
# # build:zig-cc --copt=-fno-sanitize=undefined
# # build:zig-cc --host_copt=-fno-sanitize=undefined

# # Use Zig C/C++ compiler (cross-compile to Linux/aarch64).
# build:zig-cc-linux-aarch64 --config=zig-cc
# build:zig-cc-linux-aarch64 --platforms @zig_sdk//platform:linux_aarch64
# build:zig-cc-linux-aarch64 --run_under=qemu-aarch64-static
# build:zig-cc-linux-aarch64 --test_env=QEMU_LD_PREFIX=/usr/aarch64-linux-gnu/

# Any personal configuration settings should go in a gitignored .bazelrc.local
try-import %workspace%/.bazelrc.local
