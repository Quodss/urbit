PARSED

=/  id
  |=([t/$ x/t] x)
:*  (id @ 1)
    (id * 2)
    (id {@ @} [3 4])
    (id ^ [5 6])
    (id ? %&)
    (id $-({t|$ t} t) id)
    ((id $-({t=$ t} t) id) $-({t=$ t} t) id)
    (id $-({t=$ t} t) (id $-({t=$ t} t) id))
==

CODE

=+  id=|=([t/$ x/t] x)
:*  (id @ 1)
    (id * 2)
    (id {@ @} 3 4)
    (id ^ 5 6)
    (id ? %&)
    (id $-({t=$ t} t) id)
    ((id $-({t=$ t} t) id) $-({t=$ t} t) id)
    (id $-({t=$ t} t) (id $-({t=$ t} t) id))
==

COLD

=+  id=|=(_ +7)
:*  (+3 @ 1)
    (+3 * 2)
    (+3 {@ @} 3 4)
    (+3 ^ 5 6)
    (+3 ? %&)
    (+3 $-({t=$ +3} +6) +5)
    %+  (+3 $-({t=$ +3} +6) +5)
      $-({t=$ +3} +6)
    +5
    %+  +3
      $-({t=$ +3} +6)
    (+5 $-({t=$ +3} +6) +9)
==

TYPE

=>  :-  0
    ^=  id
    =>  0
    |=(_ +7)
$:  @
    *
    {@ @}
    ^
    ?
    $-({t=$ +3} +6)
    $-({t=$ +3} +6)
    $-({t=$ +3} +6)
==
Cell' (Aura' "") (Cons' (Atom' 0 Sand "") (Face' [Mask "id"] (Lamb' (Atom' 0 Sand "") (Stub +7)))) (Cell Noun (Cell (Cell (Aura "") (Aura "")) (Cell (Cell Noun Noun) (Cell (Fork (fromList [0,1]) "f") (Cell (Gate (Cell (Face [Mask "t"] Type) (Stub +3)) (Stub +6)) (Cell (Gate (Cell (Face [Mask "t"] Type) (Stub +3)) (Stub +6)) (Gate (Cell (Face [Mask "t"] Type) (Stub +3)) (Stub +6))))))))

BASE

:*  1
    2
    [3 4]
    [5 6]
    %&
    +5:0
    %+  +5:0
      =>  :-  0
          ^=  id
          =>  0
          |=(_ +7)
      $-  =>  :-  0
              ^=  id
              =>  0
              |=(_ +7)
          {t=$ +3}
      +6
    +5:0
    %+  +5:0
      =>  :-  0
          ^=  id
          =>  0
          |=(_ +7)
      $-  =>  :-  0
              ^=  id
              =>  0
              |=(_ +7)
          {t=$ +3}
      +6
    +9:0
==