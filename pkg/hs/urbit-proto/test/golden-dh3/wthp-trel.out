PARSED

%.  [%& %& %&]
|=  tre/{? ? ?}
^-  @
?-(tre [%& %& %&] 1, [%& %& %|] 2, [%& %| %&] 3, [%| %& %&] 4, [%& %| %|] 5, [%| %& %|] 6, [%| %| %&] 7, [%| %| %|] 8)

CODE

%^  |=  tre/{? ? ?}
    ^-  @
    ?:  ?=([%& %& %&] tre)
      1
    ?:  ?=([%& %& %|] tre)
      2
    ?:  ?=([%& %| %&] tre)
      3
    ?:  ?=([%| %& %&] tre)
      4
    ?:  ?=([%& %| %|] tre)
      5
    ?:  ?=([%| %& %|] tre)
      6
    ?:  ?=([%| %| %&] tre)
      7
    ??  ?=([%| %| %|] tre)
    8
    %&
  %&
%&

ERROR

  trace:  play:
          lvl   0
          sut   *
          ken   0
          ----
          code  %^  |=  tre/{? ? ?}
                    ^-  @
                    ?:  ?=([%& %& %&] tre)
                      1
                    ?:  ?=([%& %& %|] tre)
                      2
                    ?:  ?=([%& %| %&] tre)
                      3
                    ?:  ?=([%| %& %&] tre)
                      4
                    ?:  ?=([%& %| %|] tre)
                      5
                    ?:  ?=([%| %& %|] tre)
                      6
                    ?:  ?=([%| %| %&] tre)
                      7
                    ??  ?=([%| %| %|] tre)
                    8
                    %&
                  %&
                %&


          play:
          lvl   0
          sut   *
          ken   0
          ----
          code  |=  tre/{? ? ?}
                ^-  @
                ?:  ?=([%& %& %&] tre)
                  1
                ?:  ?=([%& %& %|] tre)
                  2
                ?:  ?=([%& %| %&] tre)
                  3
                ?:  ?=([%| %& %&] tre)
                  4
                ?:  ?=([%& %| %|] tre)
                  5
                ?:  ?=([%| %& %|] tre)
                  6
                ?:  ?=([%| %| %&] tre)
                  7
                ??  ?=([%| %| %|] tre)
                8


          play:
          lvl   1
          sut   {* tre={? ? ?}}
          ken   [0 +3]
          ----
          code  ^-  @
                ?:  ?=([%& %& %&] tre)
                  1
                ?:  ?=([%& %& %|] tre)
                  2
                ?:  ?=([%& %| %&] tre)
                  3
                ?:  ?=([%| %& %&] tre)
                  4
                ?:  ?=([%& %| %|] tre)
                  5
                ?:  ?=([%| %& %|] tre)
                  6
                ?:  ?=([%| %| %&] tre)
                  7
                ??  ?=([%| %| %|] tre)
                8


          work:
          lvl   1
          sut   {* tre={? ? ?}}
          ken   [0 +3]
          ----
          mode  nest
          code  ?:  ?=([%& %& %&] tre)
                  1
                ?:  ?=([%& %& %|] tre)
                  2
                ?:  ?=([%& %| %&] tre)
                  3
                ?:  ?=([%| %& %&] tre)
                  4
                ?:  ?=([%& %| %|] tre)
                  5
                ?:  ?=([%| %& %|] tre)
                  6
                ?:  ?=([%| %| %&] tre)
                  7
                ??  ?=([%| %| %|] tre)
                8

          type  @

          work:
          lvl   1
          sut   $:  *
                    ^=  tre
                    $:  $|
                        ?:  ?=([0 0] +3)
                          $:  $|
                              ?:  ?=(0 +3)
                                $|
                              ?
                          ==
                        {? ?}
                    ==
                ==

          ken   [0 1 1 1]
          ----
          mode  nest
          code  ?:  ?=([%& %& %|] tre)
                  2
                ?:  ?=([%& %| %&] tre)
                  3
                ?:  ?=([%| %& %&] tre)
                  4
                ?:  ?=([%& %| %|] tre)
                  5
                ?:  ?=([%| %& %|] tre)
                  6
                ?:  ?=([%| %| %&] tre)
                  7
                ??  ?=([%| %| %|] tre)
                8

          type  @

          fuse:
          lvl   1
          sut   $:  *
                    ^=  tre
                    $:  $|
                        ?:  ?=([0 0] +3)
                          $:  $|
                              ?:  ?=(0 +3)
                                $|
                              ?
                          ==
                        {? ?}
                    ==
                ==

          ken   [0 1 1 1]
          ----
          semi  [1 1 1]
          type  $:  $|
                    ?:  ?=([0 0] +3)
                      $:  $|
                          ?:  ?=(0 +3)
                            $|
                          ?
                      ==
                    {? ?}
                ==

          skin  [%& %& %|]

          fuse:
          lvl   1
          sut   $:  *
                    ^=  tre
                    $:  $|
                        ?:  ?=([0 0] +3)
                          $:  $|
                              ?:  ?=(0 +3)
                                $|
                              ?
                          ==
                        {? ?}
                    ==
                ==

          ken   [0 1 1 1]
          ----
          semi  1
          type  $|
          skin  %&

          nest:
          have  $&
          need  $|


  nest-fail:
  have  $&
  need  $|

